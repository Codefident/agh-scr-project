package trafficLights
public
	with Data_Model;
	with SEI;
	with urbanTraffic;
	with emergencyVehicle;
	
	-- DATA --
	data Signal
		properties
			Data_Model::Enumerators => ("Go", "Stop", "ChangingSignal", "Failure");
			Data_Size => 15 bytes;
	end Signal;
	
	data RequestSignal
		properties
			Data_Model::Data_Representation => Boolean;
			Data_Size => 2 bytes;
	end RequestSignal;
	
	data LightStatus
		properties
			Data_Model::Data_Representation => Boolean;
			Data_Size => 2 bytes;
	end LightStatus;
	
	
	-- SYSTEM --
	system TrafficLightsSystem
		features
			radioBus: requires bus access urbanTraffic::Radio;
	end TrafficLightsSystem;
	
	system implementation TrafficLightsSystem.impl
		subcomponents
			
			-- lights
			mainCarLight: device CarTrafficLight;
			sideCarLight: device CarTrafficLight;
			tramLight: device TramTrafficLight;
			mainPedLight: device PedTrafficLight;
			sidePedLight: device PedTrafficLight;
			
			-- other devices
			pedButtonMain: device PedButton.impl;
			pedButtonSide: device PedButton.impl;
			tramSensor: device TramSensor.impl;
			radioReceiver: device RadioReceiver.impl;
			
			-- other components
			cpu: processor CPU.impl;
			mem: memory Mem.impl;
			commBus: bus CommBus.impl;
			
			-- processes
			mainController: process MainController.impl;
			
			
		connections
			-- Pedestrian and tram request connections
			c1: port pedButtonMain.requestSignal -> mainController.receivePedMainRequest;
			c2: port pedButtonSide.requestSignal -> mainController.receivePedSideRequest;
			c3: port tramSensor.requestSignal -> mainController.receiveTramRequest;

			-- Signal output from controller to lights
			c4: port mainController.sendSignal -> mainCarLight.signalReceive;
			c5: port mainController.sendSignal -> sideCarLight.signalReceive;
			c6: port mainController.sendSignal -> tramLight.signalReceive;
			c7: port mainController.sendSignal -> mainPedLight.signalReceive;
			c8: port mainController.sendSignal -> sidePedLight.signalReceive;
			
			-- Light Status
			c9: port mainCarLight.sendStatus -> mainController.receiveLightStatus;
			c10: port sideCarLight.sendStatus -> mainController.receiveLightStatus;
			c11: port tramLight.sendStatus -> mainController.receiveLightStatus;
			c12: port mainPedLight.sendStatus -> mainController.receiveLightStatus;
			c13: port sidePedLight.sendStatus -> mainController.receiveLightStatus;
			
			-- Emergency signal
			c14: port radioReceiver.outEmergencySignal -> mainController.receiveEmergencySignal;
			
			-- Bus
			b1: bus access pedButtonMain.busConn <-> commBus;
			b2: bus access pedButtonSide.busConn <-> commBus;
			b3: bus access tramSensor.busConn <-> commBus;
			b4: bus access mainCarLight.busConn <-> commBus;
			b5: bus access sideCarLight.busConn <-> commBus;
			b6: bus access tramLight.busConn <-> commBus;
			b7: bus access mainPedLight.busConn <-> commBus;
			b8: bus access sidePedLight.busConn <-> commBus;
			bcpu: bus access cpu.busConn <-> commBus;
			bmem: bus access mem.busConn <-> commBus;
			brecRadio: bus access radioBus -> radioReceiver.radioBus;
			brecComm: bus access radioReceiver.busConn <-> commBus;
			
		-- Actual bindings
		properties
			Actual_Processor_Binding => (reference(cpu)) applies to mainController;
			Actual_Processor_Binding => (reference(cpu)) applies to mainController.pedButtonThread;
			Actual_Processor_Binding => (reference(cpu)) applies to mainController.tramSensorThread;
			Actual_Processor_Binding => (reference(cpu)) applies to mainController.radioReceiverThread;
			Actual_Processor_Binding => (reference(cpu)) applies to mainController.lightThread;
		
			Actual_Memory_Binding => (reference(mem)) applies to mainController;
			Actual_Memory_Binding => (reference(mem)) applies to mainController.pedButtonThread;
			Actual_Memory_Binding => (reference(mem)) applies to mainController.tramSensorThread;
			Actual_Memory_Binding => (reference(mem)) applies to mainController.radioReceiverThread;
			Actual_Memory_Binding => (reference(mem)) applies to mainController.lightThread;
		
			Actual_Connection_Binding => (reference(commBus)) applies to pedButtonMain.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to pedButtonSide.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to tramSensor.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to mainCarLight.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to sideCarLight.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to tramLight.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to mainPedLight.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to sidePedLight.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to cpu.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to mem.busConn;
			Actual_Connection_Binding => (reference(commBus)) applies to radioReceiver.busConn;
			
	end TrafficLightsSystem.impl;
	
	
	-- PROCESSES --
	process MainController
		features
			receivePedMainRequest: in data port RequestSignal;
			receivePedSideRequest: in data port RequestSignal;
			receiveTramRequest: in data port RequestSignal;
			receiveLightStatus: in data port LightStatus;
			receiveEmergencySignal: in data port emergencyVehicle::EmergencySignal;
			sendSignal: out data port Signal;
	end MainController;
	
	process implementation MainController.impl
		subcomponents
			pedButtonThread: thread PedButtonThread.impl;
			tramSensorThread: thread TramSensorThread.impl;
			radioReceiverThread: thread RadioReceiverThread.impl;
			lightThread: thread LightThread.impl;
		connections
			c1: port receiveTramRequest -> tramSensorThread.dataIn;
			c2: port receivePedMainRequest -> pedButtonThread.dataIn;
			c3: port receivePedSideRequest -> pedButtonThread.dataIn;
			c4: port lightThread.dataOut -> sendSignal;
			c5: port receiveLightStatus -> lightThread.dataIn;
			c6: port receiveEmergencySignal -> radioReceiverThread.dataIn;
	end MainController.impl;
	
	
	-- THREADS --
	thread PedButtonThread
		features
			dataIn: in data port RequestSignal;
	end PedButtonThread;
	thread implementation PedButtonThread.impl
	end PedButtonThread.impl;
	
	thread TramSensorThread
		features
			dataIn: in data port RequestSignal;
	end TramSensorThread;
	thread implementation TramSensorThread.impl
	end TramSensorThread.impl;
	
	thread LightThread
		features
			dataOut: out data port Signal;
			dataIn: in data port LightStatus;
	end LightThread;
	thread implementation LightThread.impl
	end LightThread.impl;
	
	thread RadioReceiverThread
		features
			dataIn: in data port emergencyVehicle::EmergencySignal;
			dataOut: out data port emergencyVehicle::EmergencySignal;
	end RadioReceiverThread;
	thread implementation RadioReceiverThread.impl
	end RadioReceiverThread.impl;
	
	-- PROCESSOR --
	processor CPU
		features
			busConn: requires bus access CommBus;
		properties
			SEI::MIPSCapacity => 120.0 mips;
	end CPU;
	processor implementation CPU.impl
	end CPU.impl;
	
	-- MEMORY --
	memory Mem
		features
			busConn: requires bus access CommBus;
	end Mem;
	memory implementation Mem.impl
	end Mem.impl;
	
	
	-- BUS --
	bus CommBus
	end CommBus;
	bus implementation CommBus.impl
	end CommBus.impl;
	
	
	-- DEVICES --
	device CarTrafficLight
		features
			signalReceive: in data port Signal;
			sendStatus: out data port LightStatus;
			busConn: requires bus access CommBus;
		properties
			SEI::GrossWeight => 17.0 kg;
	end CarTrafficLight;
	device implementation CarTrafficLight.impl
	end CarTrafficLight.impl;
	
	device TramTrafficLight
		features
			signalReceive: in data port Signal;
			sendStatus: out data port LightStatus;
			busConn: requires bus access CommBus;
		properties
			SEI::GrossWeight => 12.0 kg;
	end TramTrafficLight;
	device implementation TramTrafficLight.impl
	end TramTrafficLight.impl;
	
	device PedTrafficLight
		features
			signalReceive: in data port Signal;
			sendStatus: out data port LightStatus;
			busConn: requires bus access CommBus;
		properties
			SEI::GrossWeight => 8.0 kg;
	end PedTrafficLight;
	device implementation PedTrafficLight.impl
	end PedTrafficLight.impl;
	
	device PedButton
		features
			requestSignal: out data port RequestSignal;
			busConn: requires bus access CommBus;
		properties
			SEI::GrossWeight => 1.0 kg;
	end PedButton;
	device implementation PedButton.impl
	end PedButton.impl;
	
	device TramSensor
		features
			requestSignal: out data port RequestSignal;
			busConn: requires bus access CommBus;
		properties
			SEI::GrossWeight => 10.0 kg;
	end TramSensor;
	device implementation TramSensor.impl
	end TramSensor.impl;
	
	device RadioReceiver
		features
			outEmergencySignal: out data port emergencyVehicle::EmergencySignal;
			radioBus: requires bus access urbanTraffic::Radio;
			busConn: requires bus access CommBus;
	end RadioReceiver;
	device implementation RadioReceiver.impl
	end RadioReceiver.impl;
	
end trafficLights;
